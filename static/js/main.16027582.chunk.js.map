{"version":3,"sources":["Components/Navigation/Navigation.js","Routes/Routes.js","App.js","Components/Calendario/FilterC.js","Components/Historicos/Historicos.js","Main.js","serviceWorker.js","index.js","marker.png"],"names":["withRouter","props","className","to","App","useState","message","historic","setHistoric","zoom","setZoom","color","setColor","Date","now","getTime","dateNow","useEffect","getInfo","timer","setInterval","clearInterval","console","log","fetch","then","res","json","data","data1","toString","catch","err","style","display","flexDirection","height","fontWeight","length","latitud","longitud","date","Map","center","onZoomEnd","e","target","_zoom","TileLayer","attribution","url","Marker","position","icon","L","iconUrl","userLocation","iconSize","Polyline","positions","filter","ele","map","Popup","FiltroC","filterNow","handleFilter","dateOutput","timeOutput","timeOutput1","selectRange","onChange","showSecond","onClick","Historicos","lowerDateRange","setLowerDateRange","upperDateRange","setUpperDateRange","firstTime","setFirstTime","secondTime","setSecondTime","filterHistoric","setFilterHistoric","time","msArray","format","split","ms","arrayDate","Main","initial","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.16027582.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../Routes/Routes.js\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation(props) {\r\n  const logout = () => {\r\n    props.history.replace(\"/\"); //Irse a página de login al hacer logout\r\n  };\r\n\r\n  return (\r\n    <div className=\"bodyy\">\r\n      <section>\r\n        <header>\r\n          <div className=\"navBox\">\r\n            <ul className=\"extra\">\r\n              <li>\r\n                <Link to={ROUTES.HOME}>Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to={ROUTES.HISTORICOS}>Históricos</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </header>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(Navigation);\r\n","export const HOME = \"/\";\r\nexport const HISTORICOS = \"/historicos\";\r\n","import React, { Component, useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport L from \"leaflet\";\nimport userLocation from \"./marker.png\";\nimport { Map, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\";\nimport Navigation from \"./Components/Navigation/Navigation.js\";\n\nfunction App() {\n  const [message, setMessage] = useState(\n    \">REV002096113686+1101831-0748084000022732;ID=SyrusG4<\"\n  );\n\n  const [historic, setHistoric] = useState([]);\n  const [zoom, setZoom] = useState(15);\n  const [color, setColor] = useState(\"black\");\n  const [dateNow, setDateNow] = useState(new Date(Date.now()).getTime());\n\n  useEffect(() => {\n    getInfo();\n    const timer = setInterval(() => {\n      getInfo();\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  useEffect(() => {\n    setColor(color === \"blue\" ? \"black\" : \"blue\");\n    console.log(historic);\n  }, [historic]);\n\n  const getInfo = () => {\n    fetch(\"http://ec2-54-172-1-171.compute-1.amazonaws.com:5000/coords\")\n      .then((res) => res.json())\n      .then((data) => {\n        let { data1 } = data;\n\n        if (historic.toString() !== data1.toString()) {\n          setHistoric(data1);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100vw\",\n      }}\n    >\n      <Navigation />\n      <div className=\"claseUno\">\n        <div style={{ color: color, fontWeight: \"bolder\" }}>{message}</div>\n        <div style={{ color: color, fontWeight: \"bolder\" }}>\n          Latitud:{\" \"}\n          {historic.length > 0 && historic[historic.length - 1].latitud}\n        </div>\n        <div style={{ color: color, fontWeight: \"bolder\" }}>\n          Longitud:{\" \"}\n          {historic.length > 0 && historic[historic.length - 1].longitud}\n        </div>\n        <div style={{ color: color, fontWeight: \"bolder\" }}>\n          Fecha y Hora:{\" \"}\n          {historic.length > 0 && historic[historic.length - 1].date}\n        </div>\n      </div>\n      <div className=\"dive\">\n        <Map\n          className=\"map\"\n          center={[\n            historic.length > 0 && historic[historic.length - 1].latitud,\n            historic.length > 0 && historic[historic.length - 1].longitud,\n          ]}\n          zoom={zoom}\n          onZoomEnd={(e) => {\n            setZoom(e.target._zoom);\n          }}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Marker\n            position={[\n              historic.length > 0 && historic[historic.length - 1].latitud,\n              historic.length > 0 && historic[historic.length - 1].longitud,\n            ]}\n            icon={L.icon({\n              iconUrl: userLocation,\n              iconSize: [40, 40],\n            })}\n          >\n            <Polyline\n              positions={\n                historic.length > 0 && [\n                  historic\n                    .filter((ele) => dateNow < new Date(ele.date).getTime())\n                    .map((ele) => {\n                      return [ele.latitud, ele.longitud];\n                    }),\n                ]\n              }\n            />\n            <Popup>\n              Latitud:{\" \"}\n              {historic.length > 0 && historic[historic.length - 1].latitud}{\" \"}\n              <br /> Longitud:{\" \"}\n              {historic.length > 0 && historic[historic.length - 1].longitud}\n            </Popup>\n          </Marker>\n        </Map>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport TimePicker from \"rc-time-picker\";\r\nimport \"react-select/dist/react-select.css\";\r\nimport \"react-virtualized/styles.css\";\r\nimport \"react-virtualized-select/styles.css\";\r\nimport FilterC from \"./FilterC.css\";\r\n\r\nconst FiltroC = ({\r\n  filterNow,\r\n  handleFilter,\r\n  dateOutput,\r\n  timeOutput,\r\n  timeOutput1,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div style={{ display: \"flex\", height: \"15vh\" }}>\r\n      <div className=\"columnFilter\">\r\n        <Calendar selectRange onChange={dateOutput} />\r\n      </div>\r\n\r\n      <div className=\"timeFilter\">\r\n        <div>\r\n          <TimePicker showSecond={false} onChange={timeOutput} />\r\n        </div>\r\n        <div>\r\n          <TimePicker showSecond={false} onChange={timeOutput1} />\r\n        </div>\r\n      </div>\r\n      <button\r\n        className=\"butClass\"\r\n        style={{ height: \"7vh\" }}\r\n        onClick={() => handleFilter()}\r\n      >\r\n        Filtrar\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FiltroC;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Navigation from \"../Navigation/Navigation.js\";\r\nimport FilterC from \"../Calendario/FilterC.js\";\r\nimport TimePicker from \"rc-time-picker\";\r\nimport \"rc-time-picker/assets/index.css\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport { Map, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"./Historicos.css\";\r\nimport userLocation from \"../../marker.png\";\r\n\r\nfunction Historicos() {\r\n  const [lowerDateRange, setLowerDateRange] = useState(0);\r\n  const [upperDateRange, setUpperDateRange] = useState(0);\r\n  const [firstTime, setFirstTime] = useState(0);\r\n  const [secondTime, setSecondTime] = useState(0);\r\n  const [historic, setHistoric] = useState([]);\r\n  const [filterHistoric, setFilterHistoric] = useState([]);\r\n  const [zoom, setZoom] = useState(15);\r\n\r\n  useEffect(() => {\r\n    getInfo();\r\n  }, []);\r\n\r\n  const getInfo = () => {\r\n    fetch(\"http://ec2-54-172-1-171.compute-1.amazonaws.com:5000/coords\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let { data1 } = data;\r\n\r\n        if (historic.toString() !== data1.toString()) {\r\n          setHistoric(data1);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleFilter = () => {\r\n    console.log(\"clic\");\r\n    let arrayDate = historic.filter((ele) => {\r\n      return (\r\n        new Date(ele.date).getTime() >= lowerDateRange + firstTime &&\r\n        new Date(ele.date).getTime() <=\r\n          upperDateRange - 24 * 3600 * 1000 + 1000 + secondTime\r\n      );\r\n    });\r\n\r\n    setFilterHistoric(arrayDate);\r\n  };\r\n\r\n  const dateOutput = (date) => {\r\n    console.log(date);\r\n    setLowerDateRange(new Date(date[0]).getTime());\r\n    setUpperDateRange(new Date(date[1]).getTime());\r\n  };\r\n\r\n  const timeOutput = (time) => {\r\n    if (time !== null) {\r\n      let msArray = time.format(\"HH:mm\").split(\":\");\r\n      let ms = (msArray[0] * 3600 + msArray[1] * 60) * 1000;\r\n      setFirstTime(ms);\r\n    }\r\n  };\r\n\r\n  const timeOutput1 = (time) => {\r\n    if (time !== null) {\r\n      let msArray = time.format(\"HH:mm\").split(\":\");\r\n      let ms = (msArray[0] * 3600 + msArray[1] * 60) * 1000;\r\n      setSecondTime(ms);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100vw\",\r\n      }}\r\n    >\r\n      <Navigation />\r\n      <div className=\"dive\">\r\n        <FilterC\r\n          dateOutput={dateOutput}\r\n          timeOutput={timeOutput}\r\n          timeOutput1={timeOutput1}\r\n          handleFilter={handleFilter}\r\n        />\r\n\r\n        <Map\r\n          className=\"map\"\r\n          center={[11.01931, -74.8084]}\r\n          zoom={zoom}\r\n          onZoomEnd={(e) => {\r\n            setZoom(e.target._zoom);\r\n          }}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          <Marker\r\n            position={[\r\n              filterHistoric.length > 0 &&\r\n                filterHistoric[filterHistoric.length - 1].latitud,\r\n              filterHistoric.length > 0 &&\r\n                filterHistoric[filterHistoric.length - 1].longitud,\r\n            ]}\r\n            icon={L.icon({\r\n              iconUrl: userLocation,\r\n              iconSize: [40, 40],\r\n            })}\r\n          ></Marker>\r\n          <Polyline\r\n            positions={\r\n              filterHistoric.length > 0 && [\r\n                filterHistoric.map((ele) => {\r\n                  return [ele.latitud, ele.longitud];\r\n                }),\r\n              ]\r\n            }\r\n          />\r\n        </Map>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Historicos;\r\n","import React, { Component, useState, useEffect, useRef } from \"react\";\r\nimport App from \"./App\";\r\nimport Historicos from \"./Components/Historicos/Historicos\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport * as ROUTES from \"./Routes/Routes\";\r\n\r\n\r\nfunction Main() {\r\n  return (\r\n      \r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route initial={true} exact path={ROUTES.HOME} component={App} />\r\n          <Route exact path={ROUTES.HISTORICOS} component={Historicos} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./index.css\";\nimport Main from \"./Main\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/marker.71c80642.png\";"],"sourceRoot":""}